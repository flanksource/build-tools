name: Create Release
on:
  push:
    branches:
      - master
jobs:
  docker:
    runs-on: ubuntu-20.04
    needs: semantic-release
    steps:
      - uses: actions/checkout@master
      - name: Publish Build Image to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: flanksource/build-tools
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_names: true
          snapshot: true

  binaries:
    runs-on: ubuntu-20.04
    needs: semantic-release
    steps:
      - uses: actions/checkout@v2
      - run: make release
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./.bin/build-tools
          asset_name: build-tools
          asset_content_type: application/octet-stream
      - name: Upload MacOSX Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./.bin/build-tools_osx
          asset_name: build-tools_osx
          asset_content_type: application/octet-stream

  semantic-release:
    runs-on: ubuntu-20.04
    outputs:
      release-version: ${{ steps.semantic.outputs.release-version }}
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
